// Copyright (C) Microsoft Corporation. All rights reserved.
//
// This program is free software; you can redistribute it
// and/or modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.

#define GPIO_LOW                        0
#define GPIO_HIGH                       1
 
 /* Specify active levels for various functions */
#define ACTIVELEVEL_PORTPRESENCE        GPIO_LOW
#define ACTIVELEVEL_PORTCONTROL         GPIO_LOW
#define ACTIVELEVEL_PORTBUFFER          GPIO_LOW
#define ACTIVELEVEL_DEBUGLED            GPIO_LOW
#define ACTIVELEVEL_RELAYCONTROL        GPIO_LOW
#define ACTIVELEVEL_MODE		 	    GPIO_HIGH
#define ACTIVELEVEL_LRSELECT            GPIO_HIGH
#define ACTIVELEVEL_THROTTLEBYPASS      GPIO_HIGH
#define ACTIVELEVEL_THLOCALBYPASS       GPIO_HIGH
#define ACTIVELEVEL_THENABLE	        GPIO_LOW
#define ACTIVELEVEL_P12VAGOOD			GPIO_HIGH
#define ACTIVELEVEL_P12VBGOOD			GPIO_HIGH
#define ACTIVELEVEL_BOARDREV            GPIO_HIGH
#define ACTIVELEVEL_ROWTHSTAT           GPIO_LOW

#define IS_ACTIVE_LOW(x)				((x == GPIO_LOW)?1:0)
 
/* PIN Assignments for the M2010 Scoutbuild 6/14/2016 */
#define NPINS_PER_BANK      32
#define PINID(bank,pin)    (bank * NPINS_PER_BANK + pin)

/* Specify the pins as PINID(bank number, bit number) for ARM A9 gpios
 * See below for expander GPIOs 
 */

enum GPIO_PORTPRESENCE {
    GPIO_PORTPRESENCE_1 	= PINID(2,22),
    GPIO_PORTPRESENCE_2 	= PINID(2,23),
    GPIO_PORTPRESENCE_3 	= PINID(2,25),
    GPIO_PORTPRESENCE_4 	= PINID(2,6),
    GPIO_PORTPRESENCE_5 	= PINID(2,7),
    GPIO_PORTPRESENCE_6 	= PINID(2,8),
    GPIO_PORTPRESENCE_7 	= PINID(2,9),
    GPIO_PORTPRESENCE_8 	= PINID(2,10),
    GPIO_PORTPRESENCE_9 	= PINID(0,24),
    GPIO_PORTPRESENCE_10    = PINID(2,12),
    GPIO_PORTPRESENCE_11    = PINID(2,13),
    GPIO_PORTPRESENCE_12    = PINID(2,14),
    GPIO_PORTPRESENCE_13    = PINID(2,15),
    GPIO_PORTPRESENCE_14    = PINID(2,16),
    GPIO_PORTPRESENCE_15    = PINID(2,17),
    GPIO_PORTPRESENCE_16    = PINID(0,8),
    GPIO_PORTPRESENCE_17    = PINID(0,9),
    GPIO_PORTPRESENCE_18    = PINID(0,10),
    GPIO_PORTPRESENCE_19    = PINID(0,11),
    GPIO_PORTPRESENCE_20    = PINID(0,7),
    GPIO_PORTPRESENCE_21    = PINID(1,28),
    GPIO_PORTPRESENCE_22    = PINID(5,31),
    GPIO_PORTPRESENCE_23    = PINID(3,24),
    GPIO_PORTPRESENCE_24    = PINID(3,22),
    GPIO_PORTPRESENCE_25    = PINID(3,23),
    GPIO_PORTPRESENCE_26    = PINID(3,25),
    GPIO_PORTPRESENCE_27    = PINID(4,4),
    GPIO_PORTPRESENCE_28    = PINID(4,1),
    GPIO_PORTPRESENCE_29    = PINID(4,0),
    GPIO_PORTPRESENCE_30    = PINID(5,19),
    GPIO_PORTPRESENCE_31    = PINID(5,20),
    GPIO_PORTPRESENCE_32    = PINID(4,24),
    GPIO_PORTPRESENCE_33    = PINID(4,25),
    GPIO_PORTPRESENCE_34    = PINID(4,26),
    GPIO_PORTPRESENCE_35    = PINID(4,27),
    GPIO_PORTPRESENCE_36    = PINID(4,28),
    GPIO_PORTPRESENCE_37    = PINID(4,29),
    GPIO_PORTPRESENCE_38    = PINID(4,14),
    GPIO_PORTPRESENCE_39    = PINID(2,1),
    GPIO_PORTPRESENCE_40    = PINID(5,30),
    GPIO_PORTPRESENCE_41    = PINID(4,5),
    GPIO_PORTPRESENCE_42    = PINID(4,6),
    GPIO_PORTPRESENCE_43    = PINID(4,11),
    GPIO_PORTPRESENCE_44    = PINID(3,21),
    GPIO_PORTPRESENCE_45    = PINID(3,18),
    GPIO_PORTPRESENCE_46    = PINID(3,19),
    GPIO_PORTPRESENCE_47    = PINID(3,20),
    GPIO_PORTPRESENCE_48    = PINID(4,3),
};

enum GPIO_PORTCONTROL {
    GPIO_PORTCONTROL_1      = PINID(4,2),
    GPIO_PORTCONTROL_2      = PINID(0,2),
    GPIO_PORTCONTROL_3      = PINID(1,0),
    GPIO_PORTCONTROL_4      = PINID(1,1),
    GPIO_PORTCONTROL_5      = PINID(1,2),
    GPIO_PORTCONTROL_6      = PINID(1,3),
    GPIO_PORTCONTROL_7      = PINID(1,4),
    GPIO_PORTCONTROL_8      = PINID(1,5),
    GPIO_PORTCONTROL_9      = PINID(1,6),
    GPIO_PORTCONTROL_10 	= PINID(1,7),
    GPIO_PORTCONTROL_11 	= PINID(5,8),
    GPIO_PORTCONTROL_12 	= PINID(5,9),
    GPIO_PORTCONTROL_13 	= PINID(5,10),
    GPIO_PORTCONTROL_14 	= PINID(5,11),
    GPIO_PORTCONTROL_15 	= PINID(5,12),
    GPIO_PORTCONTROL_16 	= PINID(5,7),
    GPIO_PORTCONTROL_17 	= PINID(4,15),
    GPIO_PORTCONTROL_18 	= PINID(4,12),
    GPIO_PORTCONTROL_19 	= PINID(1,9),
    GPIO_PORTCONTROL_20 	= PINID(1,8),
    GPIO_PORTCONTROL_21 	= PINID(2,30),
    GPIO_PORTCONTROL_22 	= PINID(2,31),
    GPIO_PORTCONTROL_23 	= PINID(2,29),
    GPIO_PORTCONTROL_24 	= PINID(2,26),
    GPIO_PORTCONTROL_25 	= PINID(0,6),
    GPIO_PORTCONTROL_26 	= PINID(4,16),
    GPIO_PORTCONTROL_27 	= PINID(4,17),
    GPIO_PORTCONTROL_28 	= PINID(4,18),
    GPIO_PORTCONTROL_29 	= PINID(4,19),
    GPIO_PORTCONTROL_30 	= PINID(4,20),
    GPIO_PORTCONTROL_31 	= PINID(4,21),
    GPIO_PORTCONTROL_32 	= PINID(3,14),
    GPIO_PORTCONTROL_33 	= PINID(3,15),
    GPIO_PORTCONTROL_34 	= PINID(3,16),
    GPIO_PORTCONTROL_35 	= PINID(3,17),
    GPIO_PORTCONTROL_36 	= PINID(5,29),
    GPIO_PORTCONTROL_37 	= PINID(4,7),
    GPIO_PORTCONTROL_38 	= PINID(4,8),
    GPIO_PORTCONTROL_39 	= PINID(4,9),
    GPIO_PORTCONTROL_40 	= PINID(4,10),
    GPIO_PORTCONTROL_41 	= PINID(4,13),
    GPIO_PORTCONTROL_42 	= PINID(5,13),
    GPIO_PORTCONTROL_43 	= PINID(5,4),
    GPIO_PORTCONTROL_44 	= PINID(5,5),
    GPIO_PORTCONTROL_45 	= PINID(5,6),
    GPIO_PORTCONTROL_46 	= PINID(5,3),
    GPIO_PORTCONTROL_47 	= PINID(5,2),
    GPIO_PORTCONTROL_48 	= PINID(5,1),
};
            
enum GPIO_RELAYCONTROL {
    GPIO_RELAYCONTROL_1     = PINID(5,0),
    GPIO_RELAYCONTROL_2     = PINID(3,0),
    GPIO_RELAYCONTROL_3     = PINID(0,29),
    GPIO_RELAYCONTROL_4     = PINID(5,28),
};

enum GPIO_PCBREVID {
    //NOTE: These GPIOs should have been already been setup by another function
    GPIO_PCBREVID_0         = PINID(0,7),	/* GPIO_PORTPRESENCE_20 */
    GPIO_PCBREVID_1         = PINID(1,28),  /* GPIO_PORTPRESENCE_21 */
    GPIO_PCBREVID_2         = PINID(5,31),  /* GPIO_PORTPRESENCE_22 */
};

enum GPIO_BOARDID {
    GPIO_BOARDID_0          = 504,
    GPIO_BOARDID_1          = 505,
    GPIO_BOARDID_2          = 506,
};

enum GPIO_CONTROL {
    GPIO_PORT_LRSELECT      = PINID(5,27),
    GPIO_PORT_PORTBUFFER    = PINID(0,3), /* Scout build boards PINID(3,13), */

/* First expander on RM board i2c-0/0-0020/gpio/gpiochip496
 * Expander GPIOs: 504 to 511 for M2010 EV1
 * Expander GPIOs: 496 to 499 added in M2010 DV
 */
	GPIO_PORT_THENABLE      = 496,
	GPIO_PORT_THLOCALBYPASS = 497,
	GPIO_PORT_P12VAGOOD     = 498,
	GPIO_PORT_P12VBGOOD     = 499,
	                        
    GPIO_PORT_THBYPASS      = 507,
    GPIO_PORT_DEBUGLED0     = 508,
    GPIO_PORT_DEBUGLED1     = 509,
    GPIO_PORT_DEBUGLED2     = 510,
    GPIO_PORT_DEBUGLED3     = 511,

/* Second expander on Row PIB board i2c-1/1-0021/gpio/gpiochip480
 * Expander GPIOs: 480 to 484 added in M2010 DV
 */
	GPIO_PORT_THSRCROW		= 480,
	GPIO_PORT_THSRCDC 		= 481,
	GPIO_PORT_ROWTHCONNECTED= 482,
	GPIO_PORT_DCTHCONNECTED = 483,
	GPIO_PORT_ROWTHENABLE   = 484,
};
